GREET_MESSAGE = """
üèãÔ∏è –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫–ª—É–±!  

–û—Ñ–æ—Ä–º–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É –æ–Ω–ª–∞–π–Ω –∏ –Ω–∞—á–Ω–∏—Ç–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å—Å—è —É–∂–µ —Å–µ–≥–æ–¥–Ω—è üí™  
–ü–µ—Ä–µ–¥ –æ–ø–ª–∞—Ç–æ–π –æ–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å —É—Å–ª–æ–≤–∏—è–º–∏:

üîπ –í—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω—ã–π –≤–∑–Ω–æ—Å ‚Äî 3000 ‚ÇΩ (—Ä–∞–∑–æ–≤—ã–π, –æ–ø–ª–∞—á–∏–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –ø–µ—Ä–≤–æ–π –ø–æ–∫—É–ø–∫–µ)  
üîπ –î–∞–ª–µ–µ ‚Äî –µ–∂–µ–º–µ—Å—è—á–Ω–æ–µ —Å–ø–∏—Å–∞–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ç–∞—Ä–∏—Ñ–∞  
üîπ –ü–æ–¥–ø–∏—Å–∫—É –º–æ–∂–Ω–æ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç  

üí≥ –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∫–ª—É–±–Ω–æ–π –∫–∞—Ä—Ç—ã:
"""

SELECT_ANOTHER = """
üí≥ –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∫–ª—É–±–Ω–æ–π –∫–∞—Ä—Ç—ã

üîπ –í—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω—ã–π –≤–∑–Ω–æ—Å ‚Äî 3000 ‚ÇΩ (—Ä–∞–∑–æ–≤—ã–π, –æ–ø–ª–∞—á–∏–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –ø–µ—Ä–≤–æ–π –ø–æ–∫—É–ø–∫–µ)  
üîπ –î–∞–ª–µ–µ ‚Äî –µ–∂–µ–º–µ—Å—è—á–Ω–æ–µ —Å–ø–∏—Å–∞–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ç–∞—Ä–∏—Ñ–∞  
üîπ –ü–æ–¥–ø–∏—Å–∫—É –º–æ–∂–Ω–æ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç  
"""

START_PRICE = 3000

def get_pay_message(title: str, price: int) -> str:
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ–ø–ª–∞—Ç—ã"""
    return f"""
üìù –í—ã –≤—ã–±—Ä–∞–ª–∏ —Ç–∞—Ä–∏—Ñ {title} 

üí≥ –ö –æ–ø–ª–∞—Ç–µ:
‚Ä¢ –í—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω—ã–π –≤–∑–Ω–æ—Å: {START_PRICE} ‚ÇΩ (—Ä–∞–∑–æ–≤–æ)
‚Ä¢ –ê–±–æ–Ω–µ–º–µ–Ω—Ç –Ω–∞ –º–µ—Å—è—Ü: {price} ‚ÇΩ
‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî
–ò–¢–û–ì–û: {START_PRICE + price} ‚ÇΩ

‚¨áÔ∏è –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ–ø–ª–∞—Ç–∏—Ç—å:
"""

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∞–ª—å–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫ –∏–∑ API
async def get_subscriptions_from_api(user_token: str = None):
    """–ü–æ–ª—É—á–∞–µ—Ç —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–¥–ø–∏—Å–æ–∫ –∏–∑ API"""
    try:
        from api.requests import FitnessSubscriptionRequest
        
        fitness_request = FitnessSubscriptionRequest(user_token)
        result = await fitness_request.get_subscriptions()
        
        if result and result.get("subscriptions"):
            # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ API –≤ —Ñ–æ—Ä–º–∞—Ç, —Å–æ–≤–º–µ—Å—Ç–∏–º—ã–π —Å —Ç–µ–∫—É—â–∏–º –∫–æ–¥–æ–º
            subscriptions = []
            for i, sub in enumerate(result["subscriptions"], 1):
                # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ü–µ–Ω—É –∏–∑ —Å—Ç—Ä–æ–∫–∏ (–ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º —Ñ–æ—Ä–º–∞—Ç "XXXX ‚ÇΩ")
                price_str = sub.get("price", "0")
                price = int(''.join(filter(str.isdigit, price_str))) if price_str else 0
                
                # –§–æ—Ä–º–∏—Ä—É–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ
                available_time = sub.get("available_time", "")
                description = f"{sub.get('title', '–¢–∞—Ä–∏—Ñ')} ‚Äî {price} ‚ÇΩ/–º–µ—Å"
                if available_time:
                    description += f"\n{available_time}"
                
                subscriptions.append({
                    "id": i,
                    "sub_id": sub.get("id", ""),  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π ID –∏–∑ API
                    "title": sub.get("title", "–¢–∞—Ä–∏—Ñ"),
                    "description": description,
                    "price": price,
                    "available_time": available_time,
                    "fee": {
                        "id": sub.get("fee", {}).get("id", ""),
                        "title": sub.get("fee", {}).get("title", ""),
                        "price": sub.get("fee", {}).get("price", ""),
                    }
                })
            
            return subscriptions
        else:
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –µ—Å–ª–∏ API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
            return get_default_subscriptions()
            
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–æ–∫ –∏–∑ API: {e}")
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ
        return get_default_subscriptions()

def get_default_subscriptions():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–¥–ø–∏—Å–æ–∫"""
    return [
        {
            "id": 1,
            "sub_id": "default_1",
            "title": "SmartFit",
            "description": "SmartFit ‚Äî 1300 ‚ÇΩ/–º–µ—Å\n–î–æ—Å—Ç—É–ø: 07:00‚Äì17:30, 20:30‚Äì23:30",
            "price": 1300,
        },
        {
            "id": 2,
            "sub_id": "default_2", 
            "title": "FitFlow",
            "description": "FitFlow ‚Äî 1700 ‚ÇΩ/–º–µ—Å\n–ë–µ–∑–ª–∏–º–∏—Ç–Ω—ã–π –¥–æ—Å—Ç—É–ø –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è",
            "price": 1700,
        },
        {
            "id": 3,
            "sub_id": "default_3",
            "title": "ProFit",
            "description": "ProFit ‚Äî 2400 ‚ÇΩ/–º–µ—Å\n–ë–µ–∑–ª–∏–º–∏—Ç + –≥—Ä—É–ø–ø–æ–≤—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã",
            "price": 2400,
        },
    ]

# –î–µ—Ñ–æ–ª—Ç–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –ø–æ–¥–ø–∏—Å–æ–∫ (–∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –∫–∞–∫ fallback)
SUBSCRIPTION_VARIANTS = get_default_subscriptions()

MASSIVE_SUCCESS = """
üéâ –û—Ç–ª–∏—á–Ω–æ! –ü–æ–¥–ø–∏—Å–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∞!

–¢–µ–ø–µ—Ä—å –ø–æ–¥–æ–π–¥–∏—Ç–µ –≤ –æ—Ç–¥–µ–ª –ø—Ä–æ–¥–∞–∂ –∫–ª—É–±–∞ ‚Äî –≤–∞—Å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É—é—Ç –≤ —Å–∏—Å—Ç–µ–º–µ.  
–í—ã —É–∂–µ –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –ø–æ—Å–µ—â–∞—Ç—å –∫–ª—É–± —Ö–æ—Ç—å —Å–µ–≥–æ–¥–Ω—è ‚Äî –¥–æ—Å—Ç—É–ø –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω üîì

–î–æ –≤—Å—Ç—Ä–µ—á–∏ –≤ –∑–∞–ª–µ! üèãÔ∏èüî•
""" 