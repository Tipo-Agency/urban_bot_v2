import aiohttp
import os
from dotenv import load_dotenv

load_dotenv()

OPENROUTER_API_KEY = os.getenv("OPENROUTER_API_KEY")
OPENROUTER_API_URL = "https://openrouter.ai/api/v1/chat/completions"
MODEL = "openai/gpt-4o-mini"


# –ü—Ä–∏–º–µ—Ä –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π —Å–µ—Ä–≤–∏—Å–∞
BASE_KNOWLEDGE = """
  –í–æ—Ç –∫—Ä–∞—Ç–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–∞—à–µ–º —Å–µ—Ä–≤–∏—Å–µ:
- –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –º–æ–≥—É—Ç –∫—É–ø–∏—Ç—å –æ–Ω–ª–∞–π–Ω-–ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
- –î–æ—Å—Ç—É–ø –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è —á–µ—Ä–µ–∑ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç
- –í–∏–¥–µ–æ—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏, –ø–ª–∞–Ω—ã –ø–∏—Ç–∞–Ω–∏—è, —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∏ —á–∞—Ç —Å —Ç—Ä–µ–Ω–µ—Ä–∞–º–∏ (–µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–æ)
- –ü–æ–¥–ø–∏—Å–∫—É –º–æ–∂–Ω–æ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç
- –î–æ—Å—Ç—É–ø –∫ –∫—É—Ä—Å–∞–º –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –Ω–∞ –≤—Ä–µ–º—è –¥–µ–π—Å—Ç–≤–∏—è –ø–æ–¥–ø–∏—Å–∫–∏
- –ü–æ—Å–ª–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –∫—É—Ä—Å–∞ –º–æ–∂–µ—Ç –≤—ã–¥–∞–≤–∞—Ç—å—Å—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç (–µ—Å–ª–∏ –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω–æ)

  –£—Å–ª–æ–≤–∏—è –æ–ø–ª–∞—Ç—ã:
- –í—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω—ã–π –≤–∑–Ω–æ—Å: 3000 ‚ÇΩ (—Ä–∞–∑–æ–≤–æ, –ø—Ä–∏ –ø–µ—Ä–≤–æ–π –ø–æ–∫—É–ø–∫–µ)
- –î–∞–ª–µ–µ ‚Äî –µ–∂–µ–º–µ—Å—è—á–Ω–æ–µ —Å–ø–∏—Å–∞–Ω–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ç–∞—Ä–∏—Ñ–∞

   –¢–∞—Ä–∏—Ñ—ã (–ø–æ–¥–ø–∏—Å–∫–∏):
1. SmartFit ‚Äî 1300 ‚ÇΩ/–º–µ—Å  
   –î–æ—Å—Ç—É–ø: 07:00‚Äì17:30 –∏ 20:30‚Äì23:30

2. FitFlow ‚Äî 1700 ‚ÇΩ/–º–µ—Å  
   –ë–µ–∑–ª–∏–º–∏—Ç–Ω—ã–π –¥–æ—Å—Ç—É–ø –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è

3. ProFit ‚Äî 2400 ‚ÇΩ/–º–µ—Å  
   –ë–µ–∑–ª–∏–º–∏—Ç + –≥—Ä—É–ø–ø–æ–≤—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã

  –í–∞–∂–Ω–æ:
- –ù–µ –≤—ã–¥—É–º—ã–≤–∞–π –ª–∏—à–Ω–µ–≥–æ, –µ—Å–ª–∏ –Ω–µ—Ç –∏–Ω—Ñ—ã ‚Äî —á–µ—Å—Ç–Ω–æ —Å–∫–∞–∂–∏: ¬´–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Ç–æ—á–Ω–∏—Ç–µ —É –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞¬ª
- –û–±—â–∞–π—Å—è –ø–æ-—á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏, –¥—Ä—É–∂–µ–ª—é–±–Ω–æ, —Å –ø–æ–Ω–∏–º–∞–Ω–∏–µ–º
"""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ–≥–æ –∏–º–µ–Ω–∏
def is_valid_name(name: str) -> bool:
    return name and name.isalpha() and len(name) > 1

async def get_llm_response(user_message: str, telegram_name: str = "", history: list = None) -> str:
    user_name = telegram_name if is_valid_name(telegram_name) else ""
    history = history or []

    system_prompt = f"""
    –¢—ã ‚Äî —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —Å–µ—Ä–≤–∏—Å–∞ Urban210.
    üìå –û —Å–µ—Ä–≤–∏—Å–µ:
    {BASE_KNOWLEDGE}

    ‚ùó–¢—ã –Ω–µ –±–æ—Ç –∏ –Ω–µ –ò–ò. –û—Ç–≤–µ—á–∞–π –∫–∞–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫, –ø–æ-—á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏ –∏ –ø–æ–Ω—è—Ç–Ω–æ. –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user_name}
    """

    headers = {
        "Authorization": f"Bearer {OPENROUTER_API_KEY}",
        "Content-Type": "application/json",
        "HTTP-Referer": "https://urban210.jam",
        "X-Title": "Urban210SupportBot"
    }

    messages = [{"role": "system", "content": system_prompt}] + history + [
        {"role": "user", "content": user_message}
    ]

    data = {
        "model": MODEL,
        "messages": messages
    }

    async with aiohttp.ClientSession() as session:
        async with session.post(OPENROUTER_API_URL, json=data, headers=headers) as resp:
            res = await resp.json()
            return res["choices"][0]["message"]["content"]


